{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TORNIKE\\\\Desktop\\\\Omedia\\\\components\\\\slider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"../components/styles/slider.module.css\";\nimport \"@brainhubeu/react-carousel/lib/style.css\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport slidesData from \"./sliderArray\";\n\nconst SliderContainer = () => {\n  const {\n    0: nav1,\n    1: setNav1\n  } = useState(null);\n  const {\n    0: nav2,\n    1: setNav2\n  } = useState(null);\n  const {\n    0: divIndex,\n    1: setDivIndex\n  } = useState(null);\n  const {\n    0: slider1,\n    1: setSlider1\n  } = useState(null);\n  const {\n    0: slider2,\n    1: setSlider2\n  } = useState(null);\n  const [width, setWidth] = React.useState(0);\n  useEffect(() => {\n    setNav1(slider1);\n    setNav2(slider2);\n    setWidth(window.innerWidth);\n  });\n  const settingsMain = {\n    dots: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    infinite: true,\n\n    /*     autoplay: true,\r\n    draggable: true,\r\n    autoplaySpeed: 3500, */\n    asNavFor: \".slider-nav\"\n  };\n\n  const sliderChange = (old, newIndex) => {\n    setDivIndex(newIndex);\n  };\n\n  const onInit = e => {\n    setDivIndex(0);\n  };\n\n  const settingsThumbs = {\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    asNavFor: \".slider-for\",\n    centerMode: true,\n    swipeToSlide: true,\n    focusOnSelect: true,\n    centerPadding: \"10px\",\n    adaptiveHeight: true,\n    arrows: true,\n    prevArrow: '<span class=\"nav-arrow-prev fa fa-chevron-left  fa-2x\" aria-hidden=\"true\"></span>',\n    nextArrow: '<span class=\"nav-arrow-next fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></span>',\n    speed: 5000,\n    mobileFirst: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.slider,\n    children: [/*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settingsMain), {}, {\n      asNavFor: nav2,\n      onInit: onInit,\n      ref: slider => setSlider1(slider),\n      beforeChange: sliderChange,\n      children: slidesData.map(slide => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.carouselSlide,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.carouselImageGradient\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.carouselImage,\n          style: {\n            backgroundImage: `url(/assets/${slide.id}.jpg)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.carouselImageText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: slide.categ\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: slide.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: slide.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumbnail-slider-wrap\",\n      children: /*#__PURE__*/_jsxDEV(Slider, _objectSpread(_objectSpread({}, settingsThumbs), {}, {\n        asNavFor: nav1,\n        ref: slider => setSlider2(slider)\n        /* className={styles.thumbnail} */\n        ,\n        children: slidesData.map((slide, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.slickSlide,\n          alt: index,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.thumbnailImageRed,\n            style: divIndex === index ? {\n              height: \"77%\"\n            } : {\n              height: \"0\",\n              transition: \"none\"\n            }\n          }, slide.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.thumbnailImageWhite\n          }, slide.text, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.thumbnailImage,\n            alt: index,\n            style: {\n              backgroundImage: `url(/assets/${slide.id}.jpg)`,\n              after: {\n                content: \"\",\n                position: \"absolute\",\n                width: \" 2.5px\",\n                height: \" 100%\",\n                backgroundColor: \"red\",\n                borderRadius: \"6px\",\n                left: \"-5%\",\n                transform: \"translateY(-50%, -50%)\",\n                borderRadius: \"4px\"\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.thumbnailText,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: slide.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: slide.style,\n                color: slide.color\n              },\n              children: slide.thumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, slide.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SliderContainer;","map":{"version":3,"sources":["C:/Users/TORNIKE/Desktop/Omedia/components/slider.js"],"names":["React","useState","useEffect","styles","Slider","slidesData","SliderContainer","nav1","setNav1","nav2","setNav2","divIndex","setDivIndex","slider1","setSlider1","slider2","setSlider2","width","setWidth","window","innerWidth","settingsMain","dots","slidesToShow","slidesToScroll","infinite","asNavFor","sliderChange","old","newIndex","onInit","e","settingsThumbs","centerMode","swipeToSlide","focusOnSelect","centerPadding","adaptiveHeight","arrows","prevArrow","nextArrow","speed","mobileFirst","slider","map","slide","carouselSlide","carouselImageGradient","carouselImage","backgroundImage","id","carouselImageText","categ","title","text","index","slickSlide","thumbnailImageRed","height","transition","thumbnailImageWhite","thumbnailImage","after","content","position","backgroundColor","borderRadius","left","transform","thumbnailText","style","color","thumbnail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../components/styles/slider.module.css\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport slidesData from \"./sliderArray\";\r\n\r\nconst SliderContainer = () => {\r\n  const [nav1, setNav1] = useState(null);\r\n  const [nav2, setNav2] = useState(null);\r\n  const [divIndex, setDivIndex] = useState(null);\r\n  const [slider1, setSlider1] = useState(null);\r\n  const [slider2, setSlider2] = useState(null);\r\n  const [width, setWidth] = React.useState(0);\r\n\r\n  useEffect(() => {\r\n    setNav1(slider1);\r\n    setNav2(slider2);\r\n    setWidth(window.innerWidth);\r\n  });\r\n\r\n  const settingsMain = {\r\n    dots: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    infinite: true,\r\n    /*     autoplay: true,\r\n    draggable: true,\r\n    autoplaySpeed: 3500, */\r\n    asNavFor: \".slider-nav\",\r\n  };\r\n\r\n  const sliderChange = (old, newIndex) => {\r\n    setDivIndex(newIndex);\r\n  };\r\n\r\n  const onInit = (e) => {\r\n    setDivIndex(0);\r\n  };\r\n\r\n  const settingsThumbs = {\r\n    slidesToShow: 4,\r\n    slidesToScroll: 1,\r\n    asNavFor: \".slider-for\",\r\n    centerMode: true,\r\n    swipeToSlide: true,\r\n    focusOnSelect: true,\r\n    centerPadding: \"10px\",\r\n    adaptiveHeight: true,\r\n    arrows: true,\r\n    prevArrow:\r\n      '<span class=\"nav-arrow-prev fa fa-chevron-left  fa-2x\" aria-hidden=\"true\"></span>',\r\n    nextArrow:\r\n      '<span class=\"nav-arrow-next fa fa-chevron-right fa-2x\" aria-hidden=\"true\"></span>',\r\n\r\n    speed: 5000,\r\n    mobileFirst: true,\r\n  };\r\n\r\n  return (\r\n    <div className={styles.slider}>\r\n      <Slider\r\n        {...settingsMain}\r\n        asNavFor={nav2}\r\n        onInit={onInit}\r\n        ref={(slider) => setSlider1(slider)}\r\n        beforeChange={sliderChange}\r\n      >\r\n        {slidesData.map((slide) => (\r\n          <div className={styles.carouselSlide}>\r\n            <div className={styles.carouselImageGradient}></div>\r\n            <div\r\n              className={styles.carouselImage}\r\n              style={{\r\n                backgroundImage: `url(/assets/${slide.id}.jpg)`,\r\n              }}\r\n            ></div>\r\n            <div className={styles.carouselImageText}>\r\n              <span>{slide.categ}</span>\r\n              <h3>{slide.title}</h3>\r\n              <p>{slide.text}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n\r\n      <div className=\"thumbnail-slider-wrap\">\r\n        <Slider\r\n          {...settingsThumbs}\r\n          asNavFor={nav1}\r\n          ref={(slider) => setSlider2(slider)}\r\n          /* className={styles.thumbnail} */\r\n        >\r\n          {slidesData.map((slide, index) => (\r\n            <div className={styles.slickSlide} key={slide.id} alt={index}>\r\n              <div\r\n                className={styles.thumbnailImageRed}\r\n                style={\r\n                  divIndex === index\r\n                    ? { height: \"77%\" }\r\n                    : { height: \"0\", transition: \"none\" }\r\n                }\r\n                key={slide.id}\r\n              ></div>\r\n              <div\r\n                className={styles.thumbnailImageWhite}\r\n                key={slide.text}\r\n              ></div>\r\n              <div\r\n                className={styles.thumbnailImage}\r\n                alt={index}\r\n                style={{\r\n                  backgroundImage: `url(/assets/${slide.id}.jpg)`,\r\n                  after: {\r\n                    content: \"\",\r\n                    position: \"absolute\",\r\n                    width: \" 2.5px\",\r\n                    height: \" 100%\",\r\n                    backgroundColor: \"red\",\r\n                    borderRadius: \"6px\",\r\n                    left: \"-5%\",\r\n                    transform: \"translateY(-50%, -50%)\",\r\n                    borderRadius: \"4px\",\r\n                  },\r\n                }}\r\n              ></div>{\" \"}\r\n              <div className={styles.thumbnailText}>\r\n                <p>{slide.title}</p>\r\n                <span\r\n                  style={{ backgroundColor: slide.style, color: slide.color }}\r\n                >\r\n                  {slide.thumbnail}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SliderContainer;\r\n"]},"metadata":{},"sourceType":"module"}